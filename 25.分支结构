#流程控制结构
    顺序结构：程序从上往下依次执行
    分支结构：程序从两条或多条路径中选择一条去执行
    循环结构：程序在满足一定条件的基础上，重复执行一段代码

#一、分支结构
#1.if函数

功能：实现简单的双分支
语法：
IF(表达式1,表达式2,表达式3)
执行顺序：
如果表达式1成立，则IF函数返回表达式2的值，否则返回表达式3的值

#2.case结构
情况1：类似于java中的switch语句，一般用于实现等值判断
在BEGIN END中
语法：
    CASE 变量|表达式|字段
    WHEN 常量1 THEN 值1;
    WHEN 常量2 THEN 值2;
    ...
    ELSE 要返回的值n;
    END CASE;
情况2：类似于多重IF语句，一般用于实现区间判断
    CASE
    WHEN 表达式1 THEN 值1;
    WHEN 表达式2 THEN 值2;
    ...
    ELSE 值3;
    END CASE;

#案例：创建存储过程，根据传入的成绩，来显示等级，比如传入90-100，显示A。
#       80-90 显示B，70-80返回C，否则返回D
DELIMITER $
CREATE PROCEDURE myp14(IN score INT)
BEGIN
    CASE
    WHEN score>=90 AND score<=100 THEN SELECT 'A';
    WHEN score>=80 AND score<=90 THEN SELECT 'B';
    WHEN score>=70 AND score<=80 THEN SELECT 'C';
    ELSE SELECT 'D';
    END CASE;
END $

#3.if结构
功能：实现多重分支
语法：
    if 条件1 then 语句1;
    elseif 条件2 then 语句2;
    ...
    [else 语句n;]
    end if;
应用：只能在BEGIN END中使用

#案例1：根据传入的成绩，来显示等级，比如传入90-100，显示A。
#       80-90 显示B，70-80返回C，否则返回D
DELIMITER $
CREATE FUNCTION myf8(sc INT) RETURNS CHAR
BEGIN
    CASE
    WHEN score>=90 AND score<=100 THEN RETURN 'A';
    WHEN score>=80 AND score<=90 THEN RETURN 'B';
    WHEN score>=70 AND score<=80 THEN RETURN 'C';
    ELSE RETURN 'D';
    END CASE;
END $

#二、循环结构
分类:
    while/loop/repeat
循环控制：
iterate类似于continue。
leave 类似于break。

#1.while
/**
语法：
[标签:]while 循环条件 do
      循环体;
end while [标签];
*/
#2.loop
/**
可以实现死循环
语法：
[标签：]loop
        循环体;
        end loop [标签];
*/

#3.repeat
/**
语法:
[标签：]repeat
        循环体;
until 结束循环的条件
end repeat [标签];
*/

#案例：批量插入，根据次数插入到admin表中多条记录
DELIMITER $
CREATE PROCEDURE(IN cnt INT)
BEGIN
    DECLEAR jud DEFAULT 1;
    WHILE jud<=cnt do
    INSERT INTO admin(name,pwd) VALUES('123','PWD');
    SET jud=jud+1;
    END WHILE;
END $

#案例：批量插入，根据次数插入到admin表中多条记录，测试leave语句
DELIMITER $
CREATE PROCEDURE(IN cnt INT)
BEGIN
        DECLEAR jud DEFAULT 1;
        a:WHILE jud<=cnt do
                INSERT INTO admin(name,pwd) VALUES('123','PWD');
        SET jud=jud+1;
        IF jud>=5 THEN LEAVE a;
        END IF;
        END WHILE a;
END $

#3.添加iterate语句
#案例：批量插入，根据次数插入到admin表中多条记录，测试iterate语句.只插入偶数次
DELIMITER $
CREATE PROCEDURE(IN cnt INT)
BEGIN
        DECLEAR jud DEFAULT 1;
        a:WHILE jud<=cnt do
                IF MOD(jud,2)!=0 THEN iterate a;
                END IF;
                INSERT INTO admin(name,pwd) VALUES('123','PWD');
        SET jud=jud+1;
        END WHILE a;
END $
